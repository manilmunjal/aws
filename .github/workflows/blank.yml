# name: try this 

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build-and-deploy:
#     # fail-fast: false
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v2

#       - name: Log into Docker Hub
#         run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin

#       # - name: Build Node.js App
#       #   run: |
#       #     npm install
#       #     npm run build

#       - name: Build Docker Image
#         run: docker build -t manilmunjal/helloworld:latest .


#       - name: Push Docker Image to Docker Hub
#         run: docker push manilmunjal/helloworld:latest
       
#       - name: Run Docker container
#         run: docker run manilmunjal/helloworld:latest



#       - name: Tag Docker image
#         run: docker tag helloworld:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/helloworld:latest

#       - name: Push Docker image to ECR
#         run: docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/helloworld:latest
     
      
#       - name: Deploy to ECS
#         run: |
#           aws ecs update-service --cluster your-cluster-name --service your-service-name --force-new-deployment

#       - name: Update Route 53
#         run: |
#           aws route53 change-resource-record-sets \
#             --hosted-zone-id your-hosted-zone-id \
#             --change-batch file://path/to/change_batch.json




name: try this 

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Log into Docker Hub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build Docker Image
        run: docker build -t manilmunjal/helloworld:latest .

      - name: Push Docker Image to Docker Hub
        run: docker push manilmunjal/helloworld:latest

      - name: Tag Docker image for ECR
        run: docker tag manilmunjal/helloworld:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/helloworld:latest

      - name: Push Docker image to ECR
        run: |
              aws ecr get-login --region ap-south-1 --no-include-email | bash
              docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/helloworld:latest
     
      - name: Deploy to ECS
        run: |
          aws ecs update-service --cluster your-cluster-name --service your-service-name --force-new-deployment

      - name: Update Route 53
        run: |
          aws route53 change-resource-record-sets \
            --hosted-zone-id your-hosted-zone-id \
            --change-batch file://path/to/change_batch.json
